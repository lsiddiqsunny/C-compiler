Line at 1 : type_specifier	: INT

int 

Line at 1 : type_specifier	: INT

int 

Line at 1 : parameter_list->type_specifier ID

int  a

 New ScopeTable with id 2 created

Line at 2 : variable->ID

a

Line at 2 : factor->variable

a

Line at 2 : unary_expression->factor

a

Line at 2 : term->unary_expression

a

Line at 2 : simple_expression->term

a

Line at 2 : rel_expression->simple_expression

a

Line at 2 : logic_expression->rel_expression

a

Line at 2 : expression->logic_expression

a

Line at 2 : statement->RETURN expression SEMICOLON

return a;

Line at 2 : statements->statement

return a;

Line at 3 : compound_statement->LCURL statements RCURL

{return a;}

 ScopeTable# 2 
 51  --> < ID : a > 

 ScopeTable# 1 
 15  --> < ID : func > 

 ScopeTable with id 2 removed

Line at 3 : func_definition->type_specifier ID LPAREN parameter_list RPAREN compound_statement 

int  func(int  a) {
return a;
} 

Line at 3 : unit->func_definition

int  func(int  a){
return a;
}

Line at 3 : program->unit

int  func(int  a){
return a;
}


Line at 5 : type_specifier	: INT

int 

 New ScopeTable with id 3 created

Line at 6 : type_specifier	: INT

int 

Line at 6 : declaration_list->ID LTHIRD CONST_INT RTHIRD

a[2]

Line at 6 : declaration_list->declaration_list COMMA ID

a[2],c

Line at 6 : declaration_list->declaration_list COMMA ID

a[2],c,i

Line at 6 : declaration_list->declaration_list COMMA ID

a[2],c,i,j

Line at 6 : var_declaration->type_specifier declaration_list SEMICOLON

int  a[2],c,i,j;

Line at 6 : statement -> var_declaration

int  a[2],c,i,j;

Line at 6 : statements->statement

int  a[2],c,i,j;

Line at 6 : type_specifier	: FLOAT

float 

Line at 6 : declaration_list->ID

c

Line at 6 : var_declaration->type_specifier declaration_list SEMICOLON

float  c;

Line at 6 : statement -> var_declaration

float  c;

Line at 6 : statements->statements statement

int  a[2],c,i,j; float  c;

Line at 7 : factor->CONST_FLOAT

2.5

Line at 7 : unary_expression->factor

2.5

Line at 7 : term->unary_expression

2.5

Line at 7 : simple_expression->term

2.5

Line at 7 : rel_expression->simple_expression

2.5

Line at 7 : logic_expression->rel_expression

2.5

Line at 7 : expression->logic_expression

2.5

Line at 7 : variable->ID LTHIRD expression RTHIRD

a[2.5]

Line at 7 : factor->CONST_INT

1

Line at 7 : unary_expression->factor

1

Line at 7 : term->unary_expression

1

Line at 7 : simple_expression->term

1

Line at 7 : rel_expression->simple_expression

1

Line at 7 : logic_expression->rel_expression

1

Line at 7 : expression->variable ASSIGNOP logic_expression

a[2.5]=1

Line at 7 : expression_statement->expression SEMICOLON

a[2.5]=1;

Line at 7 : statement -> expression_statement

a[2.5]=1;

Line at 7 : statements->statements statement

int  a[2],c,i,j;
float  c; a[2.5]=1;

Line at 8 : variable->ID

i

Line at 8 : factor->CONST_FLOAT

2.3

Line at 8 : unary_expression->factor

2.3

Line at 8 : term->unary_expression

2.3

Line at 8 : simple_expression->term

2.3

Line at 8 : rel_expression->simple_expression

2.3

Line at 8 : logic_expression->rel_expression

2.3

Line at 8 : expression->variable ASSIGNOP logic_expression

i=2.3

Line at 8 : expression_statement->expression SEMICOLON

i=2.3;

Line at 8 : statement -> expression_statement

i=2.3;

Line at 8 : statements->statements statement

int  a[2],c,i,j;
float  c;
a[2.5]=1; i=2.3;

Line at 9 : variable->ID

j

Line at 9 : factor->CONST_INT

2

Line at 9 : unary_expression->factor

2

Line at 9 : term->unary_expression

2

Line at 9 : factor->CONST_FLOAT

3.7

Line at 9 : unary_expression->factor

3.7

Line at 9 : term->term MULOP unary_expression

2%3.7

Line at 9 : simple_expression->term

2%3.7

Line at 9 : rel_expression->simple_expression

2%3.7

Line at 9 : logic_expression->rel_expression

2%3.7

Line at 9 : expression->variable ASSIGNOP logic_expression

j=2%3.7

Line at 9 : expression_statement->expression SEMICOLON

j=2%3.7;

Line at 9 : statement -> expression_statement

j=2%3.7;

Line at 9 : statements->statements statement

int  a[2],c,i,j;
float  c;
a[2.5]=1;
i=2.3; j=2%3.7;

Line at 10 : variable->ID

a

Line at 10 : factor->CONST_INT

4

Line at 10 : unary_expression->factor

4

Line at 10 : term->unary_expression

4

Line at 10 : simple_expression->term

4

Line at 10 : rel_expression->simple_expression

4

Line at 10 : logic_expression->rel_expression

4

Line at 10 : expression->variable ASSIGNOP logic_expression

a=4

Line at 10 : expression_statement->expression SEMICOLON

a=4;

Line at 10 : statement -> expression_statement

a=4;

Line at 10 : statements->statements statement

int  a[2],c,i,j;
float  c;
a[2.5]=1;
i=2.3;
j=2%3.7; a=4;

Line at 11 : variable->ID

a

Line at 11 : factor->variable

a

Line at 11 : unary_expression->factor

a

Line at 11 : term->unary_expression

a

Line at 11 : simple_expression->term

a

Line at 11 : rel_expression->simple_expression

a

Line at 11 : logic_expression->rel_expression

a

Line at 11 : arguments->logic_expression

a

Line at 11 : argument_list->arguments

a

Line at 11 : factor->ID LPAREN argument_list RPAREN

func(a)

Line at 11 : unary_expression->factor

func(a)

Line at 11 : term->unary_expression

func(a)

Line at 11 : simple_expression->term

func(a)

Line at 11 : rel_expression->simple_expression

func(a)

Line at 11 : logic_expression->rel_expression

func(a)

Line at 11 : expression->logic_expression

func(a)

Line at 11 : expression_statement->expression SEMICOLON

func(a);

Line at 11 : statement -> expression_statement

func(a);

Line at 11 : statements->statements statement

int  a[2],c,i,j;
float  c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4; func(a);

Line at 12 : variable->ID

b

Line at 12 : factor->CONST_INT

8

Line at 12 : unary_expression->factor

8

Line at 12 : term->unary_expression

8

Line at 12 : simple_expression->term

8

Line at 12 : rel_expression->simple_expression

8

Line at 12 : logic_expression->rel_expression

8

Line at 12 : expression->variable ASSIGNOP logic_expression

b=8

Line at 12 : expression_statement->expression SEMICOLON

b=8;

Line at 12 : statement -> expression_statement

b=8;

Line at 12 : statements->statements statement

int  a[2],c,i,j;
float  c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func(a); b=8;

Line at 13 : factor->CONST_INT

0

Line at 13 : unary_expression->factor

0

Line at 13 : term->unary_expression

0

Line at 13 : simple_expression->term

0

Line at 13 : rel_expression->simple_expression

0

Line at 13 : logic_expression->rel_expression

0

Line at 13 : expression->logic_expression

0

Line at 13 : statement->RETURN expression SEMICOLON

return 0;

Line at 13 : statements->statements statement

int  a[2],c,i,j;
float  c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func(a);
b=8; return 0;

Line at 14 : factor->CONST_INT

2

Line at 14 : unary_expression->factor

2

Line at 14 : term->unary_expression

2

Line at 14 : simple_expression->term

2

Line at 14 : rel_expression->simple_expression

2

Line at 14 : logic_expression->rel_expression

2

Line at 14 : expression->logic_expression

2

Line at 14 : variable->ID LTHIRD expression RTHIRD

i[2]

Line at 14 : factor->CONST_INT

3

Line at 14 : unary_expression->factor

3

Line at 14 : term->unary_expression

3

Line at 14 : simple_expression->term

3

Line at 14 : rel_expression->simple_expression

3

Line at 14 : logic_expression->rel_expression

3

Line at 14 : expression->variable ASSIGNOP logic_expression

i[2]=3

Line at 14 : expression_statement->expression SEMICOLON

i[2]=3;

Line at 14 : statement -> expression_statement

i[2]=3;

Line at 14 : statements->statements statement

int  a[2],c,i,j;
float  c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func(a);
b=8;
return 0; i[2]=3;

Line at 15 : compound_statement->LCURL statements RCURL

{int  a[2],c,i,j;
float  c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func(a);
b=8;
return 0;
i[2]=3;}

 ScopeTable# 3 
 51  --> < ID : a > 
 53  --> < ID : c > 
 59  --> < ID : i > 
 60  --> < ID : j > 

 ScopeTable# 1 
 15  --> < ID : func > 
 64  --> < ID : main > 

 ScopeTable with id 3 removed

Line at 15 : func_definition->type_specifier ID LPAREN RPAREN compound_statement

int  main() {
int  a[2],c,i,j;
float  c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func(a);
b=8;
return 0;
i[2]=3;
}

Line at 15 : unit->func_definition

int  main(){
int  a[2],c,i,j;
float  c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func(a);
b=8;
return 0;
i[2]=3;
}

Line at 15 : program->program unit

int  func(int  a){
return a;
}
 int  main(){
int  a[2],c,i,j;
float  c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func(a);
b=8;
return 0;
i[2]=3;
}


 Symbol Table : 

 ScopeTable# 1 
 15  --> < ID : func > 
 64  --> < ID : main > 

Total Lines : 15 

Total Errors : 7 

